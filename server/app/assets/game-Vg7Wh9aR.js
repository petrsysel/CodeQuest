var f=Object.defineProperty;var A=(l,s,e)=>s in l?f(l,s,{enumerable:!0,configurable:!0,writable:!0,value:e}):l[s]=e;var r=(l,s,e)=>(A(l,typeof s!="symbol"?s+"":s,e),e);import{T as Templater,P as Puzzle,N as NotificationUI,C as ClientIdManager,B as BlocklyWorkspaceGenerator,S as ServerApi}from"./NotificationUI-CzwHS9Nb.js";import{I as Instruction,E as EventBehaviour,B as BlocklyEditor,K as KonvaBoardUI}from"./KonvaBoardUI-B3I9EWa1.js";import{B as Blockly,j as javascriptExports}from"./blockly-O3kjd3d3.js";import{d as dist}from"./easybox-DL96ur1g.js";import"./uuid-D8aEg3BZ.js";import"./konva-CKjuncwV.js";class SingleSignal{constructor(){r(this,"signals");this.signals=new Map}emit(s,e){const t=this.signals.get(s);t&&t(e)}on(s,e){this.signals.set(s,e)}}class Action{constructor(){r(this,"hybernation",!1);r(this,"signal");this.signal=new SingleSignal}exitHybernation(){this.hybernation=!1}hybernate(){this.hybernation=!0,this.emit("hybernation")}isHybernating(){return this.hybernation}execute(s,e,t,n){return new Promise((i,a)=>{a("Action not yet implemented.")})}on(s,e){this.signal.on(s,e)}emit(s){this.signal.emit(s,null)}wakeup(){throw new Error("Wakeup method not implemented.")}}class ActionContainer extends Action{constructor(...e){super();r(this,"type");r(this,"body");this.type="instant",this.body=e}async execute(e,t,n,i){await this.body.reduce((a,h)=>a.then(()=>h.execute(e,t,n,i)),Promise.resolve()),this.hybernate()}wakeup(){this.body.forEach(e=>e.wakeup()),this.exitHybernation()}}class OnEventAction extends Action{constructor(e,...t){super();r(this,"eventName");r(this,"body");this.eventName=e,this.body=new ActionContainer(...t)}get actionBody(){return this.body}async execute(e,t,n,i){return await this.eventName.execute(e,t,n,i),new Promise(async(a,h)=>{await this.body.execute(e,t,n,i),a(),this.hybernate()})}wakeup(){this.eventName.wakeup(),this.body.wakeup(),this.exitHybernation()}}class Stepper{constructor(){r(this,"signal");this.signal=new SingleSignal}on(s,e){this.signal.on(s,e)}emit(s){this.signal.emit("event-call",{eventName:s})}next(){this.signal.emit("step",{})}set(){this.signal.emit("setted",{})}registerInstruction(s){this.signal.emit("register-instruction",{gameInstruction:s})}}class ThreadController{constructor(s,e,t,n,i,a,h){r(this,"stepper");r(this,"name");r(this,"body");r(this,"object");r(this,"type");r(this,"puzzle");r(this,"sharedData");r(this,"ruleCheck");r(this,"signal");r(this,"hasBeenExecuted",!1);r(this,"hasBeenCalledNext",!1);r(this,"wasCalledDelayedAction",!1);r(this,"resolvedName","unresolved");this.puzzle=i,this.sharedData=a,this.signal=new SingleSignal,this.stepper=new Stepper,typeof e!="string"?e.execute(this.stepper,t,i,a).then(c=>{this.resolvedName=c}):this.resolvedName=e,this.name=e,this.body=n,this.object=t,this.type=s,this.ruleCheck=h,n.on("hybernation",()=>{this.signal.emit("hybernation",{})}),this.stepper.on("setted",()=>{this.wasCalledDelayedAction=!0,this.signal.emit("ready",{})}),this.stepper.on("event-call",c=>{this.signal.emit("event-call",{eventName:c.eventName})}),this.stepper.on("register-instruction",c=>{this.signal.emit("register-instruction",{gameInstruction:c.gameInstruction})})}on(s,e){this.signal.on(s,e)}checkRules(){return new Promise(async(s,e)=>{const t=[],n=[],i=new Stepper;i.on("event-call",a=>{t.push(a.eventName)}),i.on("register-instruction",a=>{n.push(a.gameInstruction)}),i.on("setted",()=>{i.next()}),this.ruleCheck?(await this.ruleCheck.execute(i,this.object,this.puzzle,this.sharedData),s({eventCalls:t,instructions:n,state:"ready"})):s({eventCalls:[],instructions:[],state:"ready"})})}next(){this.hasBeenExecuted?this.stepper.next():(this.body.execute(this.stepper,this.object,this.puzzle,this.sharedData),this.hasBeenExecuted=!0)}firstNext(){this.hasBeenCalledNext=!0,this.stepper.next()}reload(){this.hasBeenCalledNext=!1,this.hasBeenExecuted=!1,this.wasCalledDelayedAction=!1,this.body.wakeup()}}class ThreadStack{constructor(){r(this,"threads");r(this,"signal");this.threads=[],this.signal=new dist.Signal}on(s,e){this.signal.on(s,e)}add(s){this.threads.push(s),this.signal.emit("added",null)}read(){return this.threads[this.threads.length-1]}pop(){this.threads.splice(this.threads.length-1,1)[0],this.threads.length===0&&this.signal.emit("empty",null)}clearEvents(){this.threads.forEach(s=>{s.type==="event"&&this.threads.splice(this.threads.indexOf(s),1)})}}class ObjectController{constructor(s,e,t,n,i,a){r(this,"mainThread");r(this,"eventThreads");r(this,"threadStack");r(this,"signal");r(this,"object");r(this,"puzzle");r(this,"sharedData");r(this,"ruleChecks");this.signal=new dist.Signal,this.puzzle=n,this.sharedData=i,this.object=s;const h=a.length>0?a[0]:void 0;this.mainThread=new ThreadController("main","main",s,e,n,i,h),this.eventThreads=t.map(c=>new ThreadController("event",c.eventName,s,c.actionBody,n,i,h)),this.threadStack=new ThreadStack,this.ruleChecks=a,this.run()}on(s,e){this.signal.on(s,e)}run(){this.threadStack.add(this.mainThread),this.mainThread.next()}async call(s){return new Promise(async(e,t)=>{function n(a){let h=!1;return typeof a.name=="string"?h=a.name===s:h=a.resolvedName===s,h}const i=this.eventThreads.find(a=>n(a));i?(i.reload(),this.threadStack.add(i),e(!0)):e(!1)})}next(s){const e=[];return new Promise(async(t,n)=>{if(s){let a=!1;for(let h=0;h<s.length;h++)a||(a=await this.call(s[h]))}const i=a=>{const h=this.threadStack.read();if(h)if(h.body.isHybernating())t({state:"hybernation",eventCalls:a,instructions:e});else{const c=[...a];h.on("event-call",u=>{c.push(u==null?void 0:u.eventName)}),h.on("register-instruction",u=>{e.push(u.gameInstruction)}),h.on("hybernation",async()=>{var m;const u=await h.checkRules(),d=(m=this.threadStack.read())==null?void 0:m.wasCalledDelayedAction;this.threadStack.pop(),this.threadStack.read()?d?t({state:"ready",eventCalls:[...c,...u.eventCalls],instructions:[...e,...u.instructions]}):i([...c,...u.eventCalls]):t({state:"hybernation",eventCalls:[...c,...u.eventCalls],instructions:[...e,...u.instructions]})}),h.on("ready",async()=>{const u=await h.checkRules();h.hasBeenCalledNext?t({state:"ready",eventCalls:[...c,...u.eventCalls],instructions:[...e,...u.instructions]}):h.firstNext()}),h.next()}else t({state:"hybernation",eventCalls:a,instructions:e})};i([])})}}class Synchronizer{constructor(...s){r(this,"controllers");r(this,"responses");r(this,"rounds");r(this,"signal");r(this,"internalSignal");r(this,"running",!0);this.controllers=s,this.responses=[],this.rounds=[],this.signal=new dist.Signal,this.internalSignal=new SingleSignal}next(s){if(this.rounds.length>300){this.signal.emit("resolved",{gameEnd:"cycled",message:"Nejspíš došlo k zacyklení. Chceš úlohu přesto spustit?",resolvedGame:this.getRounds()});return}this.running&&(this.internalSignal.on("end-request",()=>{this.running=!1}),this.controllers.forEach(async e=>{let t;try{t=await e.next(s)}catch{t={eventCalls:[],instructions:[],state:"hybernation"},this.internalSignal.emit("end-request",null),this.signal.emit("resolved",{gameEnd:"syntaxerror",message:"V kódu je asi nějaká chyba.",resolvedGame:this.getRounds()})}this.responses.push(t);const n=this.responses.filter(i=>i.state==="hybernation");if(this.responses.length===this.controllers.length){const i=this.responses.reduce((h,c)=>[...h,...c.eventCalls],new Array),a=[...this.responses];if(this.responses=[],n.length!=a.length||i.length!==0){const h=a.map(c=>c.instructions).reduce((c,u)=>[...c,...u],[]);this.rounds.push([...h]),this.checkEndGame(a),this.next(i)}else if(n.length==a.length&&i.length===0){const h=a.map(c=>c.instructions).reduce((c,u)=>[...c,...u],[]);this.rounds.push([...h]),this.checkEndGame(a)||(this.rounds.push([Instruction.gameOver(e.mainThread.object.id,"Úlohu se nepodařilo vyřešit. To ale nevadí! Zkus to znovu!")]),this.signal.emit("resolved",{gameEnd:"notfinnished",message:"Úlohu se nepodařilo vyřešit. To ale nevadí! Zkus to znovu!",resolvedGame:this.getRounds()}))}}}))}checkEndGame(s){const e=s.find(i=>i.instructions.find(a=>a.name==="win")),t=s.find(i=>i.instructions.find(a=>a.name==="gameover"));let n=!0;return e?(this.internalSignal.emit("end-request",null),this.signal.emit("resolved",{gameEnd:"win",message:"Vítěztví!",resolvedGame:this.getRounds()})):t?(this.internalSignal.emit("end-request",null),this.signal.emit("resolved",{gameEnd:"gameover",message:"To nevadí. Zkus to znova!",resolvedGame:this.getRounds()})):n=!1,n}getRounds(){return[...this.rounds]}on(s,e){this.signal.on(s,e)}}class GoAction extends Action{constructor(){super()}execute(s,e,t){return new Promise((n,i)=>{s.on("step",()=>{t.commands.goForward(e.id),s.registerInstruction(Instruction.goForward(e.id)),n(),this.hybernate()}),s.set()})}wakeup(){this.exitHybernation()}}class ForAction extends Action{constructor(e,t){super();r(this,"predicate");r(this,"body");this.predicate=e,this.body=t}async execute(e,t,n,i){let a=await this.predicate.execute(e,t,n,i);if(typeof a=="boolean"){for(a=await this.predicate.execute(e,t,n,i);a=await this.predicate.execute(e,t,n,i);)await this.body.reduce((h,c)=>h.then(()=>c.execute(e,t,n,i)),Promise.resolve());this.hybernate()}else for(let h=0;h<a;h++)await this.body.reduce((c,u)=>c.then(()=>u.execute(e,t,n,i)),Promise.resolve()),this.hybernate()}wakeup(){this.body.forEach(e=>e.wakeup()),this.exitHybernation()}}class NumberAction extends Action{constructor(e){super();r(this,"num");this.num=e}execute(e,t,n){return new Promise((i,a)=>{i(this.num),this.hybernate()})}wakeup(){this.exitHybernation()}}class TextAction extends Action{constructor(e){super();r(this,"text");this.text=e}execute(e,t){return new Promise((n,i)=>{n(this.text),this.hybernate()})}wakeup(){this.exitHybernation()}}class EmitAction extends Action{constructor(e){super();r(this,"text");this.text=e}async execute(e,t,n,i){const a=await this.text.execute(e,t,n,i);return new Promise((h,c)=>{e.emit(a),h()})}wakeup(){this.text.wakeup(),this.exitHybernation()}}class WaitAction extends Action{constructor(e){super();r(this,"type");r(this,"delay");r(this,"countdown");this.type="delayed",this.delay=e}execute(e,t,n,i){return new Promise(async(a,h)=>{const c=await this.delay.execute(e,t,n,i);console.log(c),e.on("step",async()=>{e.registerInstruction(Instruction.wait(t.id,1)),a(),this.hybernate()}),e.set()})}wakeup(){this.delay.wakeup(),this.exitHybernation()}}class JumpAction extends Action{constructor(){super()}execute(s,e,t){return new Promise((n,i)=>{s.on("step",()=>{t.commands.jump(e.id),s.registerInstruction(Instruction.jump(e.id)),n(),this.hybernate()}),s.set()})}wakeup(){this.exitHybernation()}}class TurnAction extends Action{constructor(e){super();r(this,"side");this.side=e}execute(e,t,n){return new Promise((i,a)=>{e.on("step",()=>{n.commands.turn(t.id,this.side),e.registerInstruction(Instruction.turn(t.id,this.side)),i(),this.hybernate()}),e.set()})}wakeup(){this.exitHybernation()}}class SetDirectionAction extends Action{constructor(e){super();r(this,"direction");this.direction=e}execute(e,t,n,i){return new Promise(async(a,h)=>{const c=await this.direction.execute(e,t,n,i);n.commands.setDirection(t.id,c),e.registerInstruction(Instruction.setDirection(t.id,c)),a(),this.hybernate()})}wakeup(){this.exitHybernation()}}class DirectionPickAction extends Action{constructor(e){super();r(this,"direction");this.direction=e}execute(e,t,n){return new Promise(async(i,a)=>{i(this.direction),this.hybernate()})}wakeup(){this.exitHybernation()}}class JumpToAction extends Action{constructor(e,t){super();r(this,"x");r(this,"y");this.x=e,this.y=t}execute(e,t,n,i){return new Promise(async(a,h)=>{const c=await this.x.execute(e,t,n,i),u=await this.y.execute(e,t,n,i);n.commands.jumpTo(t.id,c,u),e.registerInstruction(Instruction.jumpTo(t.id,c,u)),a(),this.hybernate()})}wakeup(){this.exitHybernation()}}class GetXAction extends Action{constructor(){super()}execute(s,e,t){return new Promise(async(n,i)=>{const a=t.commands.getX(e.id);n(a),this.hybernate()})}wakeup(){this.exitHybernation()}}class GetYAction extends Action{constructor(){super()}execute(s,e,t){return new Promise(async(n,i)=>{const a=t.commands.getY(e.id);n(a),this.hybernate()})}wakeup(){this.exitHybernation()}}class GetDirectionAction extends Action{constructor(){super()}execute(s,e,t){return new Promise(async(n,i)=>{const a=t.commands.getDirection(e.id);n(a),this.hybernate()})}wakeup(){this.exitHybernation()}}class ChangeCostumeAction extends Action{constructor(e){super();r(this,"costumeName");this.costumeName=e}execute(e,t,n,i){return new Promise(async(a,h)=>{const c=await this.costumeName.execute(e,t,n,i);e.registerInstruction(Instruction.changeCostume(t.id,c)),a(),this.hybernate()})}wakeup(){this.costumeName.wakeup(),this.exitHybernation()}}class ShowAction extends Action{constructor(){super()}execute(s,e,t){return new Promise(async(n,i)=>{t.commands.show(e.id),s.registerInstruction(Instruction.show(e.id)),n(),this.hybernate()})}wakeup(){this.exitHybernation()}}class HideAction extends Action{constructor(){super()}execute(s,e,t){return new Promise(async(n,i)=>{t.commands.hide(e.id),s.registerInstruction(Instruction.hide(e.id)),n(),this.hybernate()})}wakeup(){this.exitHybernation()}}class SetLayerAction extends Action{constructor(e){super();r(this,"layer");this.layer=e}execute(e,t,n,i){return new Promise(async(a,h)=>{const c=await this.layer.execute(e,t,n,i);n.commands.setLayer(t.id,c),e.registerInstruction(Instruction.setLayer(t.id,c)),a(),this.hybernate()})}wakeup(){this.layer.wakeup(),this.exitHybernation()}}class BooleanAction extends Action{constructor(e){super();r(this,"value");this.value=e}execute(e,t){return new Promise((n,i)=>{n(this.value),this.hybernate()})}wakeup(){this.exitHybernation()}}class IfAction extends Action{constructor(e,t){super();r(this,"ifDoPairs");r(this,"elseStatement");r(this,"statementAmount");this.ifDoPairs=e,this.statementAmount=e.length,this.elseStatement=t}async execute(e,t,n,i){const a=async h=>{h<this.statementAmount?await this.ifDoPairs[h].ifStatement.execute(e,t,n,i)?(await this.ifDoPairs[h].doStatement.reduce((d,m)=>d.then(()=>m.execute(e,t,n,i)),Promise.resolve()),this.hybernate()):await a(h+1):(this.elseStatement&&this.elseStatement.reduce((c,u)=>c.then(()=>u.execute(e,t,n,i)),Promise.resolve()),this.hybernate())};await a(0)}wakeup(){this.ifDoPairs.forEach(e=>{e.ifStatement.wakeup(),e.doStatement.forEach(t=>{t.wakeup()})}),this.elseStatement&&this.elseStatement.forEach(e=>e.wakeup()),this.exitHybernation()}}class LogicCompareAction extends Action{constructor(e,t,n){super();r(this,"operation");r(this,"operandA");r(this,"operandB");this.operation=e,this.operandA=t,this.operandB=n}execute(e,t,n,i){return new Promise(async(a,h)=>{let c=await this.operandA.execute(e,t,n,i),u=await this.operandB.execute(e,t,n,i),d;this.operation==="EQ"?d=c==u:this.operation==="NEQ"?d=c!=u:this.operation==="LT"?d=c<u:this.operation==="LTE"?d=c<=u:this.operation==="GT"?d=c>u:d=c>=u,a(d),this.hybernate()})}wakeup(){this.exitHybernation()}}class LogicOperationAction extends Action{constructor(e,t,n){super();r(this,"operation");r(this,"operandA");r(this,"operandB");this.operation=e,this.operandA=t,this.operandB=n}execute(e,t,n,i){return new Promise(async(a,h)=>{let c=await this.operandA.execute(e,t,n,i),u=await this.operandB.execute(e,t,n,i),d;this.operation==="AND"?d=c&&u:d=c||u,a(d),this.hybernate()})}wakeup(){this.exitHybernation()}}class LogicNegateAction extends Action{constructor(e){super();r(this,"expression");this.expression=e}execute(e,t,n,i){return new Promise(async(a,h)=>{let c=await this.expression.execute(e,t,n,i);a(!c),this.hybernate()})}wakeup(){this.exitHybernation()}}class MathArithmeticAction extends Action{constructor(e,t,n){super();r(this,"operation");r(this,"operandA");r(this,"operandB");this.operation=e,this.operandA=t,this.operandB=n}execute(e,t,n,i){return new Promise(async(a,h)=>{let c=await this.operandA.execute(e,t,n,i),u=await this.operandB.execute(e,t,n,i),d;this.operation==="ADD"?d=c+u:this.operation==="MINUS"?d=c-u:this.operation==="MULTIPLY"?d=c*u:this.operation==="DIVIDE"?d=c/u:d=Math.pow(c,u),a(d),this.hybernate()})}wakeup(){this.exitHybernation()}}class MathPropertyAction extends Action{constructor(e,t,n){super();r(this,"property");r(this,"numberToCheck");r(this,"divisor");this.property=e,this.numberToCheck=t,this.divisor=n}execute(e,t,n,i){return new Promise(async(a,h)=>{let c=await this.numberToCheck.execute(e,t,n,i),u=this.divisor?await this.divisor.execute(e,t,n,i):0;const d=y=>{for(let g=2,x=Math.sqrt(y);g<=x;g++)if(y%g===0)return!1;return y>1};let m;this.property==="EVEN"?m=c%2===0:this.property==="ODD"?m=c%2!==0:this.property==="POSITIVE"?m=c>0:this.property==="NEGATIVE"?m=c<0:this.property==="PRIME"?m=d(c):this.property==="WHOLE"?m=c%1===0:m=c%u===0,a(m),this.hybernate()})}wakeup(){this.exitHybernation()}}class MathRoundAction extends Action{constructor(e,t){super();r(this,"operation");r(this,"numberToRound");this.operation=e,this.numberToRound=t}execute(e,t,n,i){return new Promise(async(a,h)=>{let c=await this.numberToRound.execute(e,t,n,i),u;this.operation==="ROUND"?u=Math.round(c):this.operation==="ROUNDDOWN"?u=Math.floor(c):u=Math.ceil(c),a(u),this.hybernate()})}wakeup(){this.exitHybernation()}}class MathModuloAction extends Action{constructor(e,t){super();r(this,"divident");r(this,"divisor");this.divident=e,this.divisor=t}execute(e,t,n,i){return new Promise(async(a,h)=>{let c=await this.divident.execute(e,t,n,i),u=await this.divisor.execute(e,t,n,i),d=c%u;a(d),this.hybernate()})}wakeup(){this.exitHybernation()}}class MathConstrainAction extends Action{constructor(e,t,n){super();r(this,"value");r(this,"low");r(this,"high");this.value=e,this.low=t,this.high=n}execute(e,t,n,i){return new Promise(async(a,h)=>{let c=await this.value.execute(e,t,n,i),u=await this.low.execute(e,t,n,i),d=await this.high.execute(e,t,n,i),m;c<u?m=u:c>d?m=d:m=c,a(m),this.hybernate()})}wakeup(){this.exitHybernation()}}class MathRandomIntAction extends Action{constructor(e,t){super();r(this,"from");r(this,"to");this.from=e,this.to=t}execute(e,t,n,i){return new Promise(async(a,h)=>{let c=await this.from.execute(e,t,n,i),u=await this.to.execute(e,t,n,i);function d(y,g){return y=Math.ceil(y),g=Math.floor(g),Math.floor(Math.random()*(g-y+1))+y}let m=d(c,u);a(m),this.hybernate()})}wakeup(){this.exitHybernation()}}class TextJoinAction extends Action{constructor(e){super();r(this,"strings");this.strings=e}execute(e,t,n,i){return new Promise(async(a,h)=>{let c="";for(const u of this.strings){const d=await u.execute(e,t,n,i);c+=d}a(c),this.hybernate()})}wakeup(){this.exitHybernation()}}class TextLengthAction extends Action{constructor(e){super();r(this,"text");this.text=e}execute(e,t,n,i){return new Promise(async(a,h)=>{const c=await this.text.execute(e,t,n,i);a(c.length),this.hybernate()})}wakeup(){this.exitHybernation()}}class TextIsEmptyAction extends Action{constructor(e){super();r(this,"text");this.text=e}execute(e,t,n,i){return new Promise(async(a,h)=>{const c=await this.text.execute(e,t,n,i);a(c.length===0),this.hybernate()})}wakeup(){this.exitHybernation()}}class DistanceToAction extends Action{constructor(e){super();r(this,"targetName");this.targetName=e}execute(e,t,n,i){return new Promise(async(a,h)=>{const c=await this.targetName.execute(e,t,n,i),u=n.commands.distanceTo(t.id,c);a(u),this.hybernate()})}wakeup(){this.exitHybernation()}}class IsTouchingAction extends Action{constructor(e){super();r(this,"targetName");this.targetName=e}execute(e,t,n,i){return new Promise(async(a,h)=>{const c=await this.targetName.execute(e,t,n,i),u=n.commands.isTouch(t.id,c);a(u),this.hybernate()})}wakeup(){this.exitHybernation()}}class IsInFrontOfMeAction extends Action{constructor(e){super();r(this,"targetName");this.targetName=e}execute(e,t,n,i){return new Promise(async(a,h)=>{const c=await this.targetName.execute(e,t,n,i),u=n.commands.isInFrontOfMe(t.id,c);a(u),this.hybernate()})}wakeup(){this.exitHybernation()}}class WinAction extends Action{constructor(e){super();r(this,"message");this.message=e}async execute(e,t,n,i){const a=await this.message.execute(e,t,n,i);return new Promise((h,c)=>{e.registerInstruction(Instruction.win(t.id,a)),e.on("step",()=>{h()}),e.set()})}wakeup(){this.message.wakeup(),this.exitHybernation()}}class GameOverAction extends Action{constructor(e){super();r(this,"message");this.message=e}async execute(e,t,n,i){const a=await this.message.execute(e,t,n,i);return new Promise((h,c)=>{e.registerInstruction(Instruction.gameOver(t.id,a)),e.on("step",()=>{h()}),e.set()})}wakeup(){this.message.wakeup(),this.exitHybernation()}}class SharedData{constructor(){r(this,"variables");r(this,"functions");r(this,"functionListeners");this.variables=new Map,this.functions=new Map,this.functionListeners=new Map}setVariable(s,e,t){this.variables.set(`${s}.${e}`,t)}getVariable(s,e){return this.variables.get(`${s}.${e}`)}changeVariable(s,e,t){let n=this.getVariable(s,e);n==null&&(n=0),this.setVariable(s,e,n+t)}registerFunction(s,e){const t=(i,a)=>{this.functionListeners.set(this.toId(s,e.getName()),a)},n=i=>{const a=this.functionListeners.get(this.toId(s,e.getName()));a&&a()};this.functions.set(this.toId(s,e.getName()),{action:e,wasReturned:!1,returnedValue:null,on:t,emit:n})}resetFunction(s,e){const t=this.functions.get(this.toId(s,e));t&&this.registerFunction(s,t.action)}toId(s,e){return`${s}.${e}`}setFunctionValue(s,e,t){const n=this.functions.get(this.toId(s,e));n&&this.functions.set(this.toId(s,e),{action:n.action,wasReturned:!0,returnedValue:t,on:n.on,emit:n.emit})}getFunction(s,e){const t=this.functions.get(this.toId(s,e));return t&&this.resetFunction(s,t.action.getName()),t}wasFunctionReturned(s,e){const t=this.functions.get(this.toId(s,e));return t?t.wasReturned:!1}returnFuntion(s,e,t){this.setFunctionValue(s,e,t)}}class SetVariableAction extends Action{constructor(e,t){super();r(this,"variableName");r(this,"value");this.variableName=e,this.value=t}execute(e,t,n,i){return new Promise(async(a,h)=>{const c=await this.value.execute(e,t,n,i);i.setVariable(t.id,this.variableName,c),a(),this.hybernate()})}wakeup(){this.exitHybernation()}}class ChangeVariableAction extends Action{constructor(e,t){super();r(this,"variableName");r(this,"increment");this.variableName=e,this.increment=t}execute(e,t,n,i){return new Promise(async(a,h)=>{const c=await this.increment.execute(e,t,n,i);i.changeVariable(t.id,this.variableName,c),a(),this.hybernate()})}wakeup(){this.exitHybernation()}}class GetVariableAction extends Action{constructor(e){super();r(this,"variableName");this.variableName=e}execute(e,t,n,i){return new Promise(async(a,h)=>{const c=i.getVariable(t.id,this.variableName);a(c),this.hybernate()})}wakeup(){this.exitHybernation()}}class FunctionAction extends Action{constructor(e,t,n){super();r(this,"body");r(this,"name");r(this,"returnValue");this.name=e,this.body=t,this.returnValue=n}getName(){return this.name}async execute(e,t,n,i){return new Promise(async(a,h)=>{i.getFunction(t.id,this.name).on("returned",()=>{a()});for(const u of this.body)await u.execute(e,t,n,i);const c=this.returnValue?await this.returnValue.execute(e,t,n,i):null;i.returnFuntion(t.id,this.name,c),a(),this.hybernate()})}wakeup(){this.body.forEach(e=>e.wakeup()),this.exitHybernation()}}class CallMethodAction extends Action{constructor(e,t,n){super();r(this,"name");r(this,"variables");r(this,"args");this.name=e,this.variables=t,this.args=n}getName(){return this.name}async execute(e,t,n,i){var h;const a=(h=i.getFunction(t.id,this.name))==null?void 0:h.action;if(a){for(const c of this.variables){const u=this.variables.indexOf(c),d=await this.args[u].execute(e,t,n,i);i.setVariable(t.id,c.id,d)}a.wakeup(),await a.execute(e,t,n,i)}this.hybernate()}wakeup(){this.exitHybernation()}}class ReturnFunctionAction extends Action{constructor(e,t,n){super();r(this,"condition");r(this,"value");r(this,"functionName");this.functionName=e,this.condition=t,this.value=n}async execute(e,t,n,i){const a=await this.condition.execute(e,t,n,i),h=this.value?await this.value.execute(e,t,n,i):null;a&&(i.getFunction(t.id,this.functionName).emit("returned"),i.returnFuntion(t.id,this.functionName,h)),this.hybernate()}wakeup(){this.condition.wakeup(),this.exitHybernation()}}class CallFunctionAction extends Action{constructor(e,t,n){super();r(this,"name");r(this,"variables");r(this,"args");this.name=e,this.variables=t,this.args=n}getName(){return this.name}async execute(e,t,n,i){return new Promise(async(a,h)=>{var u;const c=(u=i.getFunction(t.id,this.name))==null?void 0:u.action;if(c){for(const m of this.variables){const y=this.variables.indexOf(m),g=await this.args[y].execute(e,t,n,i);i.setVariable(t.id,m.id,g)}c.wakeup(),await c.execute(e,t,n,i);const d=i.getFunction(t.id,this.name);a(d.returnedValue)}this.hybernate()})}wakeup(){this.exitHybernation()}}class RuleCheckAction extends Action{constructor(e){super();r(this,"body");this.body=new ActionContainer(...e)}get actionBody(){return this.body}async execute(e,t,n,i){return new Promise(async(a,h)=>{await this.body.execute(e,t,n,i),a(),this.hybernate()})}wakeup(){this.body.wakeup(),this.exitHybernation()}}class OBTGameLauncher{constructor(l){r(this,"signal");r(this,"workspaceGenerator");r(this,"workspace");r(this,"ruleCheckWorkspace");this.signal=new dist.Signal,this.workspaceGenerator=l,this.workspace=l.createWorkspace([]),this.ruleCheckWorkspace=l.createWorkspace([])}on(l,s){this.signal.on(l,s)}async play(puzzle,originalPuzzle){const workOriginalPuzzle=originalPuzzle.clone(),enabledActions=[GoAction,JumpAction,TurnAction,SetDirectionAction,DirectionPickAction,JumpToAction,GetXAction,GetYAction,GetDirectionAction,ChangeCostumeAction,ShowAction,HideAction,SetLayerAction,ForAction,BooleanAction,LogicCompareAction,LogicOperationAction,LogicNegateAction,MathArithmeticAction,MathPropertyAction,MathRoundAction,MathModuloAction,MathConstrainAction,MathRandomIntAction,IfAction,NumberAction,TextAction,TextJoinAction,TextLengthAction,TextIsEmptyAction,EmitAction,OnEventAction,WinAction,GameOverAction,WaitAction,DistanceToAction,IsTouchingAction,IsInFrontOfMeAction,SetVariableAction,ChangeVariableAction,GetVariableAction,FunctionAction,CallMethodAction,ReturnFunctionAction,CallFunctionAction,RuleCheckAction];eval(`
			if(${enabledActions.length}) console.log("blbost")
		`);const operatingPuzzle=puzzle.clone(),sharedData=new SharedData,prepareControllers=()=>puzzle.getObjectList().map(o=>{let save={};try{save=JSON.parse(o.settings.code)}catch(l){}Blockly.serialization.workspaces.load(save,this.workspace);let tree=[],ruleChecks=[],code=javascriptExports.javascriptGenerator.workspaceToCode(this.workspace);code=code.replaceAll(/var.*?;/g,""),code=code.replaceAll(/\/\/.*?\.\.\./g,"");const finalCode=`tree = [${code.replace(new RegExp(",$"),"")}]`;eval(finalCode);const eventHandlers=tree.filter(l=>l instanceof OnEventAction),functions=tree.filter(l=>l instanceof FunctionAction);functions.forEach(l=>sharedData.registerFunction(o.id,l));const extractedRuleCheck=this.extractRuleCheck(o,workOriginalPuzzle);ruleChecks=eval(`[${extractedRuleCheck}]`),functions.forEach(l=>sharedData.registerFunction(o.id,l));const mainActions=tree.filter(l=>!(l instanceof OnEventAction)&&!(l instanceof FunctionAction)&&!(l instanceof RuleCheckAction)),main=new ActionContainer(...mainActions);return new ObjectController(o,main,eventHandlers,operatingPuzzle,sharedData,ruleChecks)});window.onunhandledrejection=l=>{l.reason instanceof DOMException||this.signal.emit("fail",{resolvedGame:[],error:"V kódu je asi nějaká chyba."})};try{const l=prepareControllers(),s=new Synchronizer(...l);s.on("resolved",e=>{e.gameEnd==="syntaxerror"?this.signal.emit("fail",{resolvedGame:e.resolvedGame,error:e.message}):this.signal.emit("done",{resolvedGame:e.resolvedGame})}),s.next()}catch(l){console.error(l),this.signal.emit("fail",{resolvedGame:[],error:"V kódu je asi nějaká chyba."})}}extractRuleCheck(l,s){const e=s.getObjectList().find(h=>h.id===l.id);if(!e)return"";let t;try{t=JSON.parse(e.settings.code)}catch{t={}}Blockly.serialization.workspaces.load(t,this.ruleCheckWorkspace);const n=this.ruleCheckWorkspace.getBlocksByType("rule_check");return n.length===0?"":`new RuleCheckAction([${javascriptExports.javascriptGenerator.statementToCode(n[0],"rule_check_body").replace(new RegExp(",$"),"")}])`}}const gameControlPanelTemplate=`
<div class="control-panel-puzzle-name-container">
	<div id="game-control-panel-puzzle-name">Název úlohy</div>
</div>
<div>
</div>
<div class="control-panel-controls">
	<span class="speed-control-label">Rychlost:</span>
	<input class="speed-control" id="game-speed-control" type="range" min="1" max="100" value="50">
	<a href="javascript:void(0)" id="play-puzzle-button-element" class="tooltip">
	<span class="tooltiptext">Spustit úlohu</span>
	<img src="./images/icons/cq-play.png"></a>
	<a href="javascript:void(0)" id="stop-puzzle-button-element" class="tooltip">
	<span class="tooltiptext">Zastavit úlohu</span>
	<img src="./images/icons/cq-stop.png"></a>
	<img id="loading-puzzle-element" src="./images/icons/cq-loading.png">
<div>
`;class GameControlPanel{constructor(s){r(this,"_panelElement");r(this,"_nameElement");r(this,"_playButton");r(this,"_stopButton");r(this,"_loadingImage");r(this,"_state");r(this,"_eventBehaviour");r(this,"speedControl");this._state="stoped",this._panelElement=document.getElementById(s),this._eventBehaviour=new EventBehaviour,Templater.inject(this._panelElement,gameControlPanelTemplate),this._nameElement=document.getElementById("game-control-panel-puzzle-name"),this._playButton=document.getElementById("play-puzzle-button-element"),this._stopButton=document.getElementById("stop-puzzle-button-element"),this._loadingImage=document.getElementById("loading-puzzle-element"),this.speedControl=dist.DomHelper.get("game-speed-control"),this._playButton.addEventListener("click",()=>{this._emit("play-puzzle",null)}),this._stopButton.addEventListener("click",()=>{this._emit("stop-puzzle",null)}),this.speedControl.addEventListener("change",()=>{this._emit("speed-change",{speed:+this.speedControl.value})}),this.setState("stoped")}on(s,e){this._eventBehaviour.on(s,e)}render(s){this._nameElement.innerHTML=s.name}_emit(s,e){this._eventBehaviour.emit(s,e)}setState(s){switch(this._state=s,s){case"playing":this._playButton.style.display="none",this._loadingImage.style.display="none",this._stopButton.style.display="block";break;case"stoped":this._playButton.style.display="block",this._loadingImage.style.display="none",this._stopButton.style.display="none";break;case"loading":this._playButton.style.display="none",this._loadingImage.style.display="block",this._stopButton.style.display="none";break}}}const gameObjectListTemplate=`
	<div class="game-object-list-wrapper">	
		<div class="game-object-list-container" id="game-object-list-container">
		</div>
	</div>
`;class GameObjectList{constructor(s){r(this,"_listElement");r(this,"_listContainerElement");r(this,"gameObjectListElement");r(this,"signal");r(this,"selectedId");this.signal=new dist.Signal,this._listElement=document.getElementById(s),Templater.inject(this._listElement,gameObjectListTemplate),this._listContainerElement=document.getElementById("game-object-list-container"),this.gameObjectListElement=document.getElementById("game-object-list")}setSelected(s){this.selectedId=s}render(s){this._listContainerElement.innerHTML="";let e=s.filter(n=>n.settings.playerEdit);const t="game-selected-object";e.forEach(n=>{const i=dist.DomHelper.make("img");i.src=n.settings.costume.path,n.id===this.selectedId&&i.classList.add(t),i.addEventListener("click",()=>{this.signal.emit("object-selected",{id:n.id})}),this._listContainerElement.appendChild(i)})}on(s,e){this.signal.on(s,e)}}class VisualizationPlayer{constructor(s,e){r(this,"_boardUI");r(this,"_isPlaying");r(this,"_notificationUI");r(this,"_eventBehaviour");this._boardUI=s,this._notificationUI=e,this._isPlaying=!1,this._eventBehaviour=new EventBehaviour}async play(s,e){this._isPlaying=!0;for(const t of s){if(!this._isPlaying)break;await Promise.all(Instruction.byObject(t).map(n=>this._boardUI.animate(e.getSettings(),e.getObjectList(),n.instructions,e))),await Instruction.withNotification(t,this._notificationUI),this._boardUI.render(e.getSettings(),e.getObjectList())}this._emit("stoped",null)}stop(){this._isPlaying=!1}isPlaying(){return this._isPlaying}on(s,e){this._eventBehaviour.on(s,e)}_emit(s,e){this._eventBehaviour.emit(s,e)}changeSpeed(s){this._boardUI.changeAnimationSpeed(s)}}class Game{constructor(s,e,t,n,i,a,h,c,u){r(this,"_puzzle");r(this,"_selectedObjectId");r(this,"originalPuzzle");r(this,"loggedUser");window.onresize=()=>{e.render(this._puzzle.getSettings(),this._puzzle.getObjectList()),n.render(this._puzzle.getObjectList()),t.render(this._puzzle.getSettings())},this._puzzle=new Puzzle,localStorage.getItem("cq-puzzle");const d=u.get();if(c.isLogged(d).then(p=>{this.loggedUser=p}),s.setupToolbox(this._puzzle.getBlocks()),this.originalPuzzle=this._puzzle.clone(),this._selectedObjectId=this._puzzle.getFirstPlayerObject(),n.render(this._puzzle.getObjectList()),this._selectedObjectId){t.render(this._puzzle.getSettings()),e.setSelected(this._selectedObjectId);let p=this._puzzle.getObject(this._selectedObjectId);p&&s.loadWorkspace(p.settings.code,{loadRuleChecks:!1})}const m=window.location.search,g=new URLSearchParams(m).get("puzzleid");g&&c.getContent(d,g).then(p=>{var w;if(p.error)console.error(p.error);else{this._puzzle.loadFromString(p.response);const b=(w=this._puzzle.getObjectList().find(v=>v.settings.playerEdit))==null?void 0:w.id;if(b){this._selectedObjectId=b,n.setSelected(b),n.render(this._puzzle.getObjectList()),e.setSelected(b),e.render(this._puzzle.getSettings(),this._puzzle.getObjectList());let v=this._puzzle.getObject(this._selectedObjectId);s.clearWorkspace(),v&&s.loadWorkspace(v.settings.code,{loadRuleChecks:!1}),s.setupToolbox(this._puzzle.getBlocks()),this.originalPuzzle=this._puzzle.clone()}}}),t.on("speed-change",p=>{const w=p.speed;h.changeSpeed(1-w/100)}),t.on("play-puzzle",()=>{s.getCode(),i.play(this._puzzle,this.originalPuzzle),t.setState("loading")}),t.on("stop-puzzle",()=>{h.stop(),t.setState("loading")}),h.on("stoped",()=>{t.setState("stoped"),setTimeout(()=>{e.render(this._puzzle.getSettings(),this._puzzle.getObjectList())},20)}),i.on("done",async p=>{t.setState("playing");let w=this._puzzle.clone();h.play(p.resolvedGame,w)}),i.on("fail",p=>{setTimeout(()=>{t.setState("stoped"),a.notify(p.error,{})},20)}),n.on("object-selected",p=>{x(p?p.id:"")}),e.on("object-selected",p=>{x(p.objectId)}),s.on("code-change",p=>{this._selectedObjectId&&this._puzzle.changeObjectCode(this._selectedObjectId,p)}),e.render(this._puzzle.getSettings(),this._puzzle.getObjectList()),n.setSelected(this._selectedObjectId?this._selectedObjectId:""),n.render(this._puzzle.getObjectList());const x=p=>{this._selectedObjectId=p,e.setSelected(p),e.render(this._puzzle.getSettings(),this._puzzle.getObjectList()),n.setSelected(this._selectedObjectId?this._selectedObjectId:""),n.render(this._puzzle.getObjectList());let w=this._puzzle.getObject(this._selectedObjectId);s.clearWorkspace(),w&&s.loadWorkspace(w.settings.code,{loadRuleChecks:!1})}}}async function main(){const l=new BlocklyEditor("game-blockly-placeholder"),s=new KonvaBoardUI("game-board-container",{draggable:!1,selectable:"player"}),e=new BlocklyWorkspaceGenerator("generator-workspace"),t=new OBTGameLauncher(e),n=new GameObjectList("game-object-list"),i=new GameControlPanel("game-control-panel"),a=new NotificationUI,h=new VisualizationPlayer(s,a),c=new ServerApi,u=new ClientIdManager,d=await c.getCostumes();Instruction.initCostumeData(d),new Game(l,s,i,n,t,a,h,c,u)}window.onload=main;
